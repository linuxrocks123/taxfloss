NUMBER x of pattern @L[0-9]*[a-z]*@ = x \ 1

APPLICABLE_FIGURE = [x] { "TODO Update This"
x < 133 : 0.0206,
133 : 0.0309,
134 : 0.0315,
135 : 0.0321,
136 : 0.0327,
137 : 0.0333,
138 : 0.0339,
139 : 0.0345,
140 : 0.0351,
141 : 0.0357,
142 : 0.0364,
143 : 0.0370,
144 : 0.0376,
145 : 0.0382,
146 : 0.0388,
147 : 0.0394,
148 : 0.0400,
149 : 0.0406,
150 : 0.0412,
151 : 0.0417,
152 : 0.0421,
153 : 0.0426,
154 : 0.0431,
155 : 0.0436,
156 : 0.0440,
157 : 0.0445,
158 : 0.0450,
159 : 0.0455,
160 : 0.0459,
161 : 0.0464,
162 : 0.0469,
163 : 0.0474,
164 : 0.0478,
165 : 0.0483,
166 : 0.0488,
167 : 0.0493,
168 : 0.0497,
169 : 0.0502,
170 : 0.0507,
171 : 0.0512,
172 : 0.0516,
173 : 0.0521,
174 : 0.0526,
175 : 0.0531,
176 : 0.0535,
177 : 0.0540,
178 : 0.0545,
179 : 0.0549,
180 : 0.0554,
181 : 0.0559,
182 : 0.0564,
183 : 0.0568,
184 : 0.0573,
185 : 0.0578,
186 : 0.0583,
187 : 0.0587,
188 : 0.0592,
189 : 0.0597,
190 : 0.0602,
191 : 0.0606,
192 : 0.0611,
193 : 0.0616,
194 : 0.0621,
195 : 0.0625,
196 : 0.0630,
197 : 0.0635,
198 : 0.0640,
199 : 0.0644,
200 : 0.0649,
201 : 0.0653,
202 : 0.0656,
203 : 0.0660,
204 : 0.0663,
205 : 0.0667,
206 : 0.0671,
207 : 0.0674,
208 : 0.0678,
209 : 0.0681,
210 : 0.0685,
211 : 0.0689,
212 : 0.0692,
213 : 0.0696,
214 : 0.0699,
215 : 0.0703,
216 : 0.0707,
217 : 0.0710,
218 : 0.0714,
219 : 0.0717,
220 : 0.0721,
221 : 0.0725,
222 : 0.0728,
223 : 0.0732,
224 : 0.0735,
225 : 0.0739,
226 : 0.0743,
227 : 0.0746,
228 : 0.0750,
229 : 0.0753,
230 : 0.0757,
231 : 0.0761,
232 : 0.0764,
233 : 0.0768,
234 : 0.0771,
235 : 0.0775,
236 : 0.0779,
237 : 0.0782,
238 : 0.0786,
239 : 0.0789,
240 : 0.0793,
241 : 0.0797,
242 : 0.0800,
243 : 0.0804,
244 : 0.0807,
245 : 0.0811,
246 : 0.0815,
247 : 0.0818,
248 : 0.0822,
249 : 0.0825,
250 : 0.0829,
251 : 0.0832,
252 : 0.0835,
253 : 0.0838,
254 : 0.0841,
255 : 0.0844,
256 : 0.0847,
257 : 0.0850,
258 : 0.0853,
259 : 0.0856,
260 : 0.0859,
261 : 0.0862,
262 : 0.0865,
263 : 0.0868,
264 : 0.0871,
265 : 0.0874,
266 : 0.0877,
267 : 0.0880,
268 : 0.0883,
269 : 0.0886,
270 : 0.0889,
271 : 0.0892,
272 : 0.0895,
273 : 0.0898,
274 : 0.0901,
275 : 0.0904,
276 : 0.0906,
277 : 0.0909,
278 : 0.0912,
279 : 0.0915,
280 : 0.0918,
281 : 0.0921,
282 : 0.0924,
283 : 0.0927,
284 : 0.0930,
285 : 0.0933,
286 : 0.0936,
287 : 0.0939,
288 : 0.0942,
289 : 0.0945,
290 : 0.0948,
291 : 0.0951,
292 : 0.0954,
293 : 0.0957,
294 : 0.0960,
295 : 0.0963,
296 : 0.0966,
297 : 0.0969,
298 : 0.0972,
299 : 0.0975,
300 <= x <= 400 : 0.0978,
401 : 1.0 }

L1 := NUMBER

work_L1 = f1040.AGI
work_L2 = f1040.L2a
work_L3 = 0 "TODO"
work_L4 = if(f1040.L5a > f1040.L5b) f1040.L5a - f1040.L5b else 0
work_L5 = work_L1 + work_L2 + work_L3 + work_L4

L2a = work_L5
L2b = 0 "TODO"
L3 = L2a + L2b

FPL_TABLE = [x] { x : $12490 + $4420 * (x - 1) }

L4 = FPL_TABLE[L1]

L5 = if(L3 > L4*4) 401 else ((L3/L4)*100 \_ 1)

L7 = APPLICABLE_FIGURE[L5]
L8a = L3*L7
L8b = L8a/12 \ 0.0001

MONTHS := NUMBER
L1223a := NUMBER
L1223b := NUMBER
L1223f := NUMBER

L11a = L1223a*MONTHS
L11b = L1223b*MONTHS
L11c = L8b*MONTHS
L11d = if(L11b - L11c > 0) L11b - L11c else 0
L11e = if(L11a < L11d) L11a else L11d
L11f = L1223f*MONTHS

L24 = L11e
L25 = L11f
L26 = if(L24 - L25 > 0) L24 - L25 else 0
NET_CREDIT = L26

L27 = if(L25 - L24 > 0) L25 - L24 else 0

REPAYMENT_LIMITATION_TABLE = [x][y] { 
                 | f1040.L1==1 | true |
| x < 200        | 325 | 650 |
| 200 <= x < 300 | 800 | 1600 |
| 300 <= x < 400 | 1350 | 2700 |
| x >= 400       | L27 | L27 | }

L28 = REPAYMENT_LIMITATION_TABLE[L5][-1]
L29 = if(L27 < L28) L27 else L28
EXCESS_REPAYMENT = L29
